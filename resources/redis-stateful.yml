apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-ha
  namespace: redis
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis-ha
  serviceName: redis-ha
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: redis-ha
    spec:
      containers:
      - args:
        - /etc/redis/redis.conf
        command:
        - redis-server
        image: redis:7.0
        imagePullPolicy: IfNotPresent
        name: redis
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /etc/redis/
          name: redis-config
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - sh
        - -c
        - /scripts/redis_init.sh
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              key: REDIS_PASSWORD
              name: redis-secret
        image: redis:7.0
        imagePullPolicy: IfNotPresent
        name: config
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/redis/
          name: redis-config
        - mountPath: /tmp/redis/
          name: config
        - mountPath: /scripts/
          name: init-script
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: redis-ha
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      # - emptyDir: {}
      #   name: data
      - azureFile:
          secretName: dicedev-redis
          shareName: redis-data
        name: data
      - emptyDir: {}
        name: redis-config
      - configMap:
          defaultMode: 511
          items:
          - key: redis_init.sh
            path: redis_init.sh
          name: redis-scripts-config-map
        name: init-script
      - configMap:
          defaultMode: 420
          items:
          - key: redis.conf
            path: redis.conf
          name: redis-config-map
        name: config
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
